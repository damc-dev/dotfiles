#!/usr/bin/python

import argparse
import socket
import sys
import time

def isOpen(ip, port, timeout):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.settimeout(timeout)
    try:
        s.connect((ip, int(port)))
        s.shutdown(socket.SHUT_RDWR)
        return True
    except:
        return False
    finally:
        s.close()

def checkHost(ip, port, retry, delay, timeout):
    ipup = False
    for i in range(retry):
        if i != 0:
            time.sleep(delay)
            
        if isOpen(ip, port, timeout):
                ipup = True
                break
                    
    return ipup

def main(argv):

    parser = argparse.ArgumentParser(description='Check connection to port of host')
    parser.add_argument("ip")
    parser.add_argument("port")
    parser.add_argument("-r", "--retry", help="Number of times to retry", default=5, type=int)
    parser.add_argument("-d", "--delay", help="Time to wait between retries (seconds)", default=10, type=int)
    parser.add_argument("-t", "--timeout", help="Connection timeout (seconds)", default=3, type=int)

    args = parser.parse_args()

    if checkHost(args.ip, args.port, args.retry, args.delay, args.timeout):
        print(f"{args.ip}:{str(args.port)} is UP")
    else:
        print(f"Failed to connect to {args.ip}:{str(args.port)}")
 


if __name__ == "__main__":
    main(sys.argv[1:])
    